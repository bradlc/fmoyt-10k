{"version":3,"sources":["main.js"],"names":["LEFT","fn","context","result","once","apply","this","arguments","flip","e","preventDefault","poster","querySelector","image","src","currentSrc","modalActive","backgroundImage","style","fromRect","classList","toRect","getBoundingClientRect","movie","width","top","left","scale","opacity","addEventListener","remove","transform","borderRadius","requestAnimationFrame","add","getNodeIndex","node","i","previousElementSibling","activeItem","document","movieContainer","movieContainerBg","movieInner","movieBack","UP","items","DOWN","length","bind","perRow","newTop","which","RIGHT","activeEl","activeElement","focus","currentIndex","closest","newIndex"],"mappings":"wBAgBA,SAAMA,GAANC,EAAAC,MAIMC,GAAAA,aADGC,kBACHD,OAISF,EAAGI,MAAMH,GAAWI,KAAMC,aAFhC,MAGEJ,GAQX,QAASK,GAAKC,GACK,mBAANA,IAAmBA,EAAEC,oBADlCC,GAAiBL,KAAAM,cAAA,uBAGTD,EAAcC,IAIZC,GAAQF,EAAOC,cAAc,OAC7BE,EAAkC,mBAArBD,GAAME,WAA6BF,EAAME,WAAaF,EAAMC,MAF5EE,MAAaC,gBAGhB,QAHgBH,EAGhB,OAFcH,MAAOC,gBAGrB,QAHAE,EAGA,OADWI,UAAMD,IAAAA,+BAMbE,GAHWC,EAAAA,wBAIXC,EAASV,EAAOW,wBADhBH,EAAAA,GAAWI,EAAMD,MAAAA,EAANE,OACXH,EAASV,EAAOW,KAAAA,EAAAA,KAIhBG,EAAMJ,EAAOI,IAAMN,EAASM,SAD5BC,MAAOL,UAGb,aAHoCK,EAGpC,OAHAD,EAGA,QAFYJ,MAAOI,UAGnB,SAHAE,EAGA,IAGKX,IAeGI,UAHEA,OAAc,oBALtBF,MAAAU,QAAA,IAOKC,iBAAA,gBAAAzB,EAAA,aACCgB,MAANQ,QAAuB,IACNV,UAAMU,OAAvB,8BACMC,UAAiBC,OAAA,8BAIfZ,MAHNa,UAAA,SAIWb,MAHIE,UAAUU,cAtBZC,IAITC,GAAe,GAAK,EAAIL,KACnBT,MAAMc,aAAkBA,EAAnC,OAFGhB,MAAagB,aAAAA,EAGhB,OAEOd,MAHIA,QAAMc,SAKVC,sBAAsB,aAFhBL,UAAbM,IAAA,8BAIahB,MAAMa,UAAY,SAFxBE,MAAAA,UAAAA,SACUb,MAAAA,QAAc,IAIvBA,UAHNc,IAAiBH,uBAQnBf,IAUWV,KAkDf,QAAS6B,GAAaC,OA1BtB,GAAAC,GAAA,EAAAD,EAAAA,EAAAE,uBAAAD,WA4BSA,GAjDT,IAAK,GAzFDrB,IAAc,EACduB,EAAa,KADbvB,EAAJwB,SAAA5B,cAAA,uBACI2B,EAAJC,SAAA5B,cAAA,0BAIMW,EAAQiB,SAAS5B,cAAc,aAF/B6B,EAAAA,SAAiBD,cAAS5B,mBAC1B8B,EAAAA,SAAmBF,cAAS5B,mBAC5BW,EAAQiB,SAAS5B,cAAc,kBAC/B+B,EAAaH,SAAS5B,cAAc,yBAEpCgC,EAAAA,SAAYJ,iBAAuB,iBAKnCK,EAAK,GAFLC,EAAQN,GAIRO,EAAO,GAFPF,EAAN,GA4ESR,EAAI,EAHEA,EAAbS,EAAAE,OAAAX,MAIMA,GAAGR,iBAAiB,QAASrB,EAGrCiC,GAHWZ,iBAAiB,QAA1B,aAIKoB,KAAKV,MAMZ,IAAId,GAAM,KACNyB,EAAAA,MACJ,KAAKA,EAAS,EAAGA,EAASJ,EAAME,OAAQE,IAAU,IAF9CzB,GAAJqB,EAAAI,GAAA5B,wBAAAG,OACIyB,OAAAA,GAAJC,IAAA1B,UAGMA,EAMNe,SAHQW,iBAAN,UAAA,SAAA1C,MAIIA,EAAE2C,QAAUP,GAAMpC,EAAE2C,QAAUC,GAAS5C,EAAE2C,QAAUL,GAAQtC,EAAE2C,QAAUpD,MACrEsD,GAAWd,SAASe,kBAF5Bf,EAASX,QAAAA,4BACDuB,GAAFI,WAMEC,GAHJtB,EAAAmB,EAAAI,QAAA,eAIEC,EAAAA,MACAlD,GAAE2C,QAAUpD,MAFVyD,EAAetB,GAEjB1B,EAAE2C,QAAUpD,MACHyD,EAAe,GAExBhD,EAAE2C,QAAUC,MACHI,EAAeP,GAExBzC,EAAE2C,QAAUL,MACHU,EAAeP,GAExBzC,GAAYoC,GAAIc,EAAAb,EAAAE,UAIZW,GAHKF","file":"main.js","sourcesContent":["let modalActive = false;\nlet activeItem = null;\n\nconst movieContainer = document.querySelector('.js-movie-container');\nconst movieContainerBg = document.querySelector('.js-movie-container-bg');\nconst movie = document.querySelector('.js-movie');\nconst movieInner = document.querySelector('.js-movie-inner');\nconst movieFront = document.querySelector('.js-movie-front');\nconst movieBack = document.querySelector('.js-movie-back');\nconst movieBackPoster = document.querySelector('.js-movie-back-poster');\n\nconst items = document.querySelectorAll('.js-grid-item');\n\nconst UP = 38;\nconst RIGHT = 39;\nconst DOWN = 40;\nconst LEFT = 37;\n\n/* eslint-disable */\nfunction once(fn, context) {\n  let result;\n\n  return function () {\n    if (fn) {\n      result = fn.apply(context || this, arguments);\n      fn = null;\n    }\n\n    return result;\n  };\n}\n/* eslint-enable */\n\nfunction flip(e) {\n  if (typeof e !== 'undefined') e.preventDefault();\n\n  const poster = this.querySelector('.js-grid-poster');\n\n  // update poster\n  if (!modalActive) {\n    const image = poster.querySelector('img');\n    const src = typeof image.currentSrc !== 'undefined' ? image.currentSrc : image.src;\n    movieFront.style.backgroundImage = `url('${src}')`;\n    movieBackPoster.style.backgroundImage = `url('${src}')`;\n\n    movieContainer.classList.add('movie-container--visible');\n  }\n\n  const fromRect = movie.getBoundingClientRect();\n  const toRect = poster.getBoundingClientRect();\n\n  const scale = 1 / (fromRect.width / toRect.width);\n  const left = toRect.left - fromRect.left;\n  const top = toRect.top - fromRect.top;\n\n  movie.style.transform = `translate(${left}px, ${top}px)`;\n  movieInner.style.transform = `scale(${scale})`;\n\n  // border radius\n  if (!modalActive) {\n    const borderRadius = 3 * (1 / scale);\n    movieFront.style.borderRadius = `${borderRadius}px`;\n    movieBack.style.borderRadius = `${borderRadius}px`;\n\n    poster.style.opacity = 0;\n\n    window.requestAnimationFrame(() => {\n      movieContainer.classList.add('movie-container--animate');\n      movieInner.style.transform = 'none';\n      movie.style.transform = 'none';\n      movieContainerBg.style.opacity = 1;\n      movie.classList.add('movie--flipped');\n    });\n  } else {\n    movie.classList.remove('movie--flipped');\n    movieContainerBg.style.opacity = 0;\n    movie.addEventListener('transitionend', once(() => {\n      poster.style.opacity = 1;\n      movieContainer.classList.remove('movie-container--animate');\n      movieContainer.classList.remove('movie-container--visible');\n      movie.style.transform = 'none';\n      movieInner.style.transform = 'none';\n    }));\n  }\n\n  modalActive = !modalActive;\n  activeItem = this;\n}\n\nfor (let i = 0; i < items.length; i++) {\n  items[i].addEventListener('click', flip);\n}\n\nmovieContainer.addEventListener('click', () => {\n  flip.bind(activeItem)();\n});\n\n/**\n * Keyboard nav\n */\nlet top = null;\nlet perRow;\nfor (perRow = 0; perRow < items.length; perRow++) {\n  const newTop = items[perRow].getBoundingClientRect().top;\n  if (top !== null && newTop !== top) {\n    break;\n  }\n  top = newTop;\n}\n\ndocument.addEventListener('keydown', e => {\n  if (e.which !== UP && e.which !== RIGHT && e.which !== DOWN && e.which !== LEFT) return;\n  const activeEl = document.activeElement;\n  if (!activeEl.closest('.grid-item')) {\n    items[0].focus();\n    return;\n  }\n  const currentIndex = getNodeIndex(activeEl.closest('.grid-item'));\n  let newIndex;\n  if (e.which === LEFT) {\n    newIndex = currentIndex - 1;\n  }\n  if (e.which === RIGHT) {\n    newIndex = currentIndex + 1;\n  }\n  if (e.which === DOWN) {\n    newIndex = currentIndex + perRow;\n  }\n  if (e.which === UP) {\n    newIndex = currentIndex - perRow;\n  }\n  if (newIndex >= 0 && newIndex < items.length) {\n    items[newIndex].focus();\n  }\n});\n\nfunction getNodeIndex(node) {\n  for (var i = 0; node = node.previousElementSibling; i++);\n  return i;\n}\n"],"sourceRoot":"/source/"}