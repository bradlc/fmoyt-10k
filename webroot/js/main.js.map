{"version":3,"sources":["main.js","_inert.js","_idb_keyval.js"],"names":["formatDate","date","months","_inertManager","inertManager","year","substring","month","_rootElement","rootElement","parseInt","day","once","fn","context","result","apply","this","arguments","debounce","func","wait","immediate","timeout","args","later","callNow","_observer","disconnect","get","url","success","xhr","window","XMLHttpRequest","ActiveXObject","open","onreadystatechange","readyState","status","responseText","setRequestHeader","send","flip","e","preventDefault","poster","querySelector","modalActive","image","src","currentSrc","style","backgroundImage","classList","add","body","fromRect","movie","getBoundingClientRect","toRect","scale","width","left","top","transform","remove","opacity","addEventListener","inert","startNode","_unmanageNode","textContent","innerHTML","disabled","focusedItem","focus","borderRadius","_visitNode","document","contains","node","root","href","nodeType","Node","DOCUMENT_FRAGMENT_NODE","data","movieData","JSON","parse","parentNode","title","overview","activeElement","release_date","genreStr","genres","length","map","id","join","youtube_id","then","saved","i","setAttribute","requestAnimationFrame","inertNode","inertSubroot","createGridItem","releaseDate","li","createElement","a","div","img","alt","record","h3","target","time","appendChild","getPerRow","items","newTop","getNodeIndex","previousElementSibling","composedTreeWalk","callback","shadowRootAncestor","ELEMENT_NODE","element","shadowRoot","webkitShadowRoot","localName","content","distributedNodes","getDistributedNodes","slot","assignedNodes","flatten","child","firstChild","nextSibling","addInertStyle","_focusableElementsString","InertRoot","_managedNodes","Set","_makeSubtreeUnfocusable","MutationObserver","_onMutation","bind","observe","attributes","childList","subtree","removeAttribute","_step","Symbol","iterator","_iteratorNormalCompletion","_iterator","next","done","value","undefined","blur","hasAttribute","_adoptInertRoot","matches","_manageNode","register","deregister","delete","getInertRoot","setInert","_step2","managedNodes","_iteratorNormalCompletion2","_iterator2","savedInertNode","records","self","_step3","_iteratorNormalCompletion3","_iterator3","type","_step4","Array","from","addedNodes","_iteratorNormalCompletion4","_iterator4","_step5","removedNodes","_iteratorNormalCompletion5","_iterator5","_unmanageSubtree","attributeName","_step6","_iteratorNormalCompletion6","_iterator6","managedNode","InertNode","inertRoot","_node","_overrodeFocusMethod","_inertRoots","_destroyed","ensureUntabbable","_throwIfDestroyed","hasSavedTabIndex","savedTabIndex","destroyed","Error","tabIndex","_savedTabIndex","size","destructor","InertManager","_document","Map","_watchForInert","head","documentElement","_onDocumentLoaded","has","set","parent","addInertRoot","removeInertRoot","inertElements","querySelectorAll","_step7","_iteratorNormalCompletion7","_iterator7","inertElement","_step8","_iteratorNormalCompletion8","_iterator8","_step9","_iteratorNormalCompletion9","_iterator9","unshift","_step10","_iteratorNormalCompletion10","_iterator10","defineProperty","Element","prototype","getDB","db","Promise","resolve","reject","openreq","indexedDB","onerror","error","onupgradeneeded","createObjectStore","onsuccess","withStore","transaction","oncomplete","objectStore","idbKeyval","key","req","store","put","clear","keys","openKeyCursor","openCursor","call","push","continue","module","exports","videoActive","activeItem","activeMovie","main","header","footer","movieContainer","movieContainerBg","movieInner","movieFront","movieBack","movieBackPoster","movieTitle","movieOverview","movieReleaseDate","movieGenre","grid","saveBtn","saveBtnText","saveBtnIcon","savedCount","watch","iframe","UP","RIGHT","DOWN","LEFT","item","closest","loadMore","link","currentPage","match","display","movies","els","createDocumentFragment","init","perRow","which","activeEl","currentIndex","newIndex","ESC","save","slice","_","console","log","tablist","tabs","panels","getAttribute","ul","movieLink"],"mappings":"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","file":"main.js","sourcesContent":["/* global imgix */\n\nconst genres = {\n  x28: 'Action',\n  x12: 'Adventure',\n  x16: 'Animation',\n  x35: 'Comedy',\n  x80: 'Crime',\n  x99: 'Documentary',\n  x18: 'Drama',\n  x10751: 'Family',\n  x14: 'Fantasy',\n  x36: 'History',\n  x27: 'Horror',\n  x10402: 'Music',\n  x9648: 'Mystery',\n  x10749: 'Romance',\n  x878: 'Science Fiction',\n  x10770: 'TV Movie',\n  x53: 'Thriller',\n  x10752: 'War',\n  x37: 'Western',\n};\n\nimport './_inert.js';\nimport './_idb_keyval.js';\n\nlet modalActive = false;\nlet videoActive = false;\nlet activeItem = null;\nlet activeMovie = null;\n\nconst main = document.querySelector('.js-main');\nconst header = document.querySelector('.js-header');\nconst footer = document.querySelector('.js-footer');\nconst movieContainer = document.querySelector('.js-movie-container');\nconst movieContainerBg = document.querySelector('.js-movie-container-bg');\nconst movie = document.querySelector('.js-movie');\nconst movieInner = document.querySelector('.js-movie-inner');\nconst movieFront = document.querySelector('.js-movie-front');\nconst movieBack = document.querySelector('.js-movie-back');\nconst movieBackPoster = document.querySelector('.js-movie-back-poster');\n\nconst movieTitle = document.querySelector('.js-movie-title');\nconst movieOverview = document.querySelector('.js-movie-overview');\nconst movieReleaseDate = document.querySelector('.js-movie-release-date');\nconst movieGenre = document.querySelector('.js-movie-genre');\nconst movieLink = document.querySelector('.js-movie-link');\n\nconst grid = document.querySelector('.js-grid');\nlet items = document.querySelectorAll('.js-grid-item');\n\nconst saveBtn = document.querySelector('.js-save');\nconst saveBtnText = document.querySelector('.js-save .btn__text');\nconst saveBtnIcon = document.querySelector('.js-save .btn__icon');\nlet savedCount = 0;\n\nconst watch = document.querySelector('.js-watch');\nconst iframe = document.querySelector('.js-iframe');\n\nlet focusedItem = null;\n\nconst UP = 38;\nconst RIGHT = 39;\nconst DOWN = 40;\nconst LEFT = 37;\nconst ESC = 27;\n\nif (!movieContainer.classList.contains('movie-container--single')) {\n  movieContainer.inert = true;\n}\n\nwatch.inert = true;\n\nfunction formatDate(date) {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const year = date.substring(0, 4);\n  let month = date.substring(5, 7);\n  month = (month.substring(0, 1) === '0') ? month.substring(1) : month;\n  month = months[parseInt(month, 10) - 1];\n  let day = date.substring(8, 10);\n  day = (day.substring(0, 1) === '0') ? day.substring(1) : day;\n  return `${day} ${month} ${year}`;\n}\n\n/* eslint-disable */\nfunction once(fn, context) {\n  let result;\n\n  return function () {\n    if (fn) {\n      result = fn.apply(context || this, arguments);\n      fn = null;\n    }\n\n    return result;\n  };\n}\n\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function() {\n    const context = this;\n    const args = arguments;\n    const later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nfunction get(url, success) {\n  var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');\n  xhr.open('GET', url);\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState > 3 && xhr.status === 200) success(xhr.responseText);\n  };\n\n  xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  xhr.send();\n\n  return xhr;\n}\n/* eslint-enable */\n\nfunction flip(e) {\n  if (typeof e !== 'undefined') e.preventDefault();\n\n  const poster = this.querySelector('.js-grid-poster');\n\n  // update poster\n  if (!modalActive) {\n    const image = poster.querySelector('img');\n    const src = typeof image.currentSrc !== 'undefined' ? image.currentSrc : image.src;\n    movieFront.style.backgroundImage = `url('${src}')`;\n    movieBackPoster.style.backgroundImage = `url('${src}')`;\n\n    movieContainer.classList.add('movie-container--visible');\n\n    document.body.classList.add('no-scroll');\n  }\n\n  const fromRect = movie.getBoundingClientRect();\n  const toRect = poster.getBoundingClientRect();\n\n  const scale = 1 / (fromRect.width / toRect.width);\n  const left = toRect.left - fromRect.left;\n  const top = toRect.top - fromRect.top;\n\n  movie.style.transform = `translate(${left}px, ${top}px)`;\n  movieInner.style.transform = `scale(${scale})`;\n\n  // border radius\n  if (!modalActive) {\n    const borderRadius = 3 * (1 / scale);\n    movieFront.style.borderRadius = `${borderRadius}px`;\n    movieBack.style.borderRadius = `${borderRadius}px`;\n\n    poster.style.opacity = 0;\n\n    movieContainer.inert = false;\n    main.inert = true;\n    header.inert = true;\n    footer.inert = true;\n\n    const href = e.target.closest('a').href;\n\n    get(href, data => {\n      const movieData = JSON.parse(data);\n      movieTitle.textContent = movieData.title;\n      movieOverview.textContent = movieData.overview;\n      movieReleaseDate.textContent = formatDate(movieData.release_date);\n\n      let genreStr = '–';\n      if (movieData.genres.length) {\n        genreStr = movieData.genres.map(id => {\n          return genres[`x${id}`];\n        }).join(', ');\n      }\n      movieGenre.textContent = genreStr;\n\n      movieLink.href = `https://www.youtube.com/watch?v=${movieData.youtube_id}`;\n\n      activeMovie = {\n        title: movieData.title,\n        overview: movieData.overview,\n        poster: movieData.poster,\n        release_date: movieData.release_date,\n        id: movieData.youtube_id,\n      };\n\n      idbKeyval.get('fmoyt-saved').then(saved => {\n        if (!saved || typeof saved === 'undefined') return;\n\n        for (let i = 0; i < saved.length; i++) {\n          if (saved[i].id === movieData.youtube_id) {\n            saveBtnText.textContent = 'Saved';\n            saveBtnIcon.innerHTML = `<svg viewBox=\"0 0 24 24\"><path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"/></svg>`;\n            saveBtn.disabled = true;\n            break;\n          }\n        }\n      });\n\n      saveBtn.setAttribute('data-title', movieData.title);\n      saveBtn.setAttribute('data-id', movieData.youtube_id);\n    });\n\n    window.requestAnimationFrame(() => {\n      movieContainer.classList.add('movie-container--animate');\n      movieInner.style.transform = 'none';\n      movie.style.transform = 'none';\n      movieContainerBg.style.opacity = 1;\n      movie.classList.add('movie--flipped');\n    });\n  } else {\n    movie.classList.remove('movie--flipped');\n    movieContainerBg.style.opacity = 0;\n    movie.addEventListener('transitionend', once(() => {\n      poster.style.opacity = 1;\n      movieContainer.classList.remove('movie-container--animate');\n      movieContainer.classList.remove('movie-container--visible');\n      document.body.classList.remove('no-scroll');\n      movie.style.transform = 'none';\n      movieInner.style.transform = 'none';\n\n      movieContainer.inert = true;\n      main.inert = false;\n      header.inert = false;\n      footer.inert = false;\n\n      // reset save button\n      saveBtnText.textContent = 'Save';\n      saveBtnIcon.innerHTML = `<svg viewBox=\"0 0 24 24\"><path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z\"/></svg>`;\n      saveBtn.disabled = false;\n\n      if (focusedItem) {\n        focusedItem.focus();\n      }\n    }));\n  }\n\n  modalActive = !modalActive;\n  activeItem = this;\n}\n\nif (grid) {\n  window.addEventListener('click', e => {\n    const item = e.target.closest('.js-grid-item');\n    if (item) {\n      e.preventDefault();\n      flip.bind(item, e)();\n    }\n  });\n\n  grid.addEventListener('focus', e => {\n    focusedItem = e.target.closest('.js-grid-item');\n  }, true);\n}\n\nmovieContainerBg.addEventListener('click', () => {\n  flip.bind(activeItem)();\n});\n\ndocument.querySelector('.js-close-movie').addEventListener('click', () => {\n  flip.bind(activeItem)();\n});\n\n/**\n * Load more\n */\nconst loadMore = document.querySelector('.js-load-more');\n\nfunction createGridItem(id, poster, title, releaseDate) {\n  const li = document.createElement('li');\n  li.classList.add('grid-item');\n\n  const a = document.createElement('a');\n  a.href = `/${id}`;\n  a.classList.add('js-grid-item');\n\n  const div = document.createElement('div');\n  div.classList.add('grid-item__poster');\n  div.classList.add('js-grid-poster');\n\n  const img = document.createElement('img');\n  img.setAttribute('ix-src', `https://fmoyt-10k.imgix.net${poster}?w=320&amp;h=480&amp;fit=crop&amp;auto=format,compress`);\n  img.alt = '';\n  img.setAttribute('sizes', '170px');\n  img.classList.add('lazyload');\n\n  const h3 = document.createElement('h3');\n  h3.textContent = title;\n\n  const year = releaseDate.substring(0, 4);\n  const time = document.createElement('time');\n  time.setAttribute('datetime', year);\n  time.classList.add('mono');\n  time.textContent = year;\n\n  div.appendChild(img);\n  a.appendChild(div);\n  a.appendChild(h3);\n  a.appendChild(time);\n  li.appendChild(a);\n\n  return li;\n}\n\nif (loadMore) {\n  loadMore.addEventListener('click', e => {\n    e.preventDefault();\n\n    const link = e.target.closest('a');\n    const href = link.href;\n\n    let currentPage = href.match(/[0-9]+$/);\n    currentPage = parseInt(currentPage[0], 10);\n    link.href = `/page/${currentPage + 1}`;\n\n    link.setAttribute('disabled', 'disabled');\n\n    if (currentPage === 20) {\n      link.style.display = 'none';\n    }\n\n    get(href, data => {\n      const movies = JSON.parse(data);\n      const els = document.createDocumentFragment();\n      for (let i = 0; i < movies.length; i++) {\n        const li = createGridItem(movies[i].youtube_id, movies[i].poster, movies[i].title, movies[i].release_date);\n        els.appendChild(li);\n      }\n\n      grid.appendChild(els);\n      link.removeAttribute('disabled');\n\n      requestAnimationFrame(() => {\n        items = document.querySelectorAll('.js-grid-item');\n        imgix.init({\n          srcAttribute: 'data-src',\n          srcsetAttribute: 'data-srcset',\n          sizesAttribute: 'data-sizes',\n        });\n      });\n    });\n  });\n}\n\n/**\n * Keyboard nav\n */\nfunction getPerRow() {\n  let top = null;\n  let i;\n  for (i = 0; i < items.length; i++) {\n    const newTop = items[i].getBoundingClientRect().top;\n    if (top !== null && newTop !== top) {\n      break;\n    }\n    top = newTop;\n  }\n  return i;\n}\nlet perRow = getPerRow();\nwindow.addEventListener('resize', debounce(() => {\n  perRow = getPerRow();\n}, 250));\n\ndocument.addEventListener('keydown', e => {\n  if (e.which !== UP && e.which !== RIGHT && e.which !== DOWN && e.which !== LEFT) return;\n  const activeEl = document.activeElement;\n  if (!activeEl.closest('.grid-item')) {\n    items[0].focus();\n    return;\n  }\n  const currentIndex = getNodeIndex(activeEl.closest('.grid-item'));\n  let newIndex;\n  if (e.which === LEFT) {\n    newIndex = currentIndex - 1;\n  }\n  if (e.which === RIGHT) {\n    newIndex = currentIndex + 1;\n  }\n  if (e.which === DOWN) {\n    newIndex = currentIndex + perRow;\n  }\n  if (e.which === UP) {\n    newIndex = currentIndex - perRow;\n  }\n  if (newIndex >= 0 && newIndex < items.length) {\n    items[newIndex].focus();\n  }\n});\n\ndocument.addEventListener('keydown', e => {\n  if (e.which === ESC && videoActive) {\n    videoActive = false;\n    watch.classList.remove('watch--active');\n    watch.addEventListener('transitionend', once(() => {\n      iframe.src = '';\n      watch.inert = true;\n      movieContainer.inert = false;\n    }));\n    return;\n  }\n  if (e.which === ESC && modalActive) {\n    flip.bind(activeItem)();\n  }\n});\n\nfunction getNodeIndex(node) {\n  for (var i = 0; node = node.previousElementSibling; i++);\n  return i;\n}\n\n\n/**\n * Save\n */\nsaveBtn.addEventListener('click', e => {\n  const btn = e.target.closest('.js-save');\n  idbKeyval.get('fmoyt-saved').then(saved => {\n    let save;\n    if (typeof saved === 'undefined') {\n      save = [];\n    } else {\n      save = saved.slice(0);\n    }\n    save.push(activeMovie);\n    idbKeyval.set('fmoyt-saved', save).then(_ => console.log('saved'));\n\n    saveBtnText.textContent = 'Saved';\n    saveBtnIcon.innerHTML = `<svg viewBox=\"0 0 24 24\"><path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"/></svg>`;\n    saveBtn.disabled = true;\n\n    // add to saved grid\n    const li = createGridItem(activeMovie.id, activeMovie.poster, activeMovie.title, activeMovie.release_date);\n    document.querySelector('.js-saved-grid').appendChild(li);\n\n    savedCount++;\n    document.querySelector('.js-saved-tab').textContent = `Saved (${savedCount})`;\n\n    requestAnimationFrame(() => {\n      items = document.querySelectorAll('.js-grid-item');\n      imgix.init({\n        srcAttribute: 'data-src',\n        srcsetAttribute: 'data-srcset',\n        sizesAttribute: 'data-sizes',\n      });\n    });\n  });\n});\n\n\n\nconst tablist = document.querySelector('.js-tablist');\n\nidbKeyval.get('fmoyt-saved').then(saved => {\n  if (saved && typeof saved !== 'undefined') {\n    savedCount = saved.length;\n  }\n\n  tablist.innerHTML = `<ul role=\"tablist\">\n      <li role=\"presentation\">\n        <a class=\"js-tab\" href=\"#all\" role=\"tab\" aria-controls=\"all\" aria-selected=\"true\">All</a>\n      </li>\n      <li role=\"presentation\">\n        <a class=\"js-tab js-saved-tab\" href=\"#saved\" role=\"tab\" aria-controls=\"saved\">Saved (${savedCount})</a>\n      </li>\n    </ul>`;\n});\n\nwindow.addEventListener('click', e => {\n  if (e.target.closest('.js-tab')) {\n    e.preventDefault();\n    const tabs = document.querySelectorAll('.js-tab');\n    const panels = document.querySelectorAll('[role=\"tabpanel\"]');\n    for (let i = 0; i < tabs.length; i++) {\n      tabs[i].removeAttribute('aria-selected');\n    }\n    e.target.closest('.js-tab').setAttribute('aria-selected', 'true');\n\n    for (let i = 0; i < panels.length; i++) {\n      panels[i].setAttribute('aria-hidden', 'true');\n    }\n    document.querySelector(e.target.closest('.js-tab').getAttribute('href')).removeAttribute('aria-hidden');\n  }\n});\n\n\nidbKeyval.get('fmoyt-saved').then(saved => {\n  if (saved) {\n    const ul = document.createDocumentFragment();\n    for (let i = 0; i < saved.length; i++) {\n      const li = createGridItem(saved[i].id, saved[i].poster, saved[i].title, saved[i].release_date);\n      ul.appendChild(li);\n    }\n    document.querySelector('.js-saved-grid').appendChild(ul);\n    requestAnimationFrame(() => {\n      items = document.querySelectorAll('.js-grid-item');\n      imgix.init({\n        srcAttribute: 'data-src',\n        srcsetAttribute: 'data-srcset',\n        sizesAttribute: 'data-sizes',\n      });\n    });\n  }\n});\n\n\nmovieLink.addEventListener('click', e => {\n  e.preventDefault();\n\n  watch.inert = false;\n  movieContainer.inert = true;\n  videoActive = true;\n  watch.classList.add('watch--active');\n  watch.addEventListener('transitionend', once(() => {\n    iframe.src = `https://www.youtube.com/embed/${activeMovie.id}?autoplay=1`;\n  }));\n});\n\n\ndocument.querySelector('.js-close-watch').addEventListener('click', () => {\n  videoActive = false;\n  watch.classList.remove('watch--active');\n  watch.addEventListener('transitionend', once(() => {\n    iframe.src = '';\n    watch.inert = true;\n    movieContainer.inert = false;\n  }));\n});\n","/**\n *\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(document) {\n\n/** @type {string} */\nconst _focusableElementsString = ['a[href]',\n                                  'area[href]',\n                                  'input:not([disabled])',\n                                  'select:not([disabled])',\n                                  'textarea:not([disabled])',\n                                  'button:not([disabled])',\n                                  'iframe',\n                                  'object',\n                                  'embed',\n                                  '[contenteditable]'].join(',');\n\n/**\n * `InertRoot` manages a single inert subtree, i.e. a DOM subtree whose root element has an `inert`\n * attribute.\n *\n * Its main functions are:\n *\n * - to create and maintain a set of managed `InertNode`s, including when mutations occur in the\n *   subtree. The `makeSubtreeUnfocusable()` method handles collecting `InertNode`s via registering\n *   each focusable node in the subtree with the singleton `InertManager` which manages all known\n *   focusable nodes within inert subtrees. `InertManager` ensures that a single `InertNode`\n *   instance exists for each focusable node which has at least one inert root as an ancestor.\n *\n * - to notify all managed `InertNode`s when this subtree stops being inert (i.e. when the `inert`\n *   attribute is removed from the root node). This is handled in the destructor, which calls the\n *   `deregister` method on `InertManager` for each managed inert node.\n */\nclass InertRoot {\n  /**\n   * @param {Element} rootElement The Element at the root of the inert subtree.\n   * @param {InertManager} inertManager The global singleton InertManager object.\n   */\n  constructor(rootElement, inertManager) {\n    /** @type {InertManager} */\n    this._inertManager = inertManager;\n\n    /** @type {Element} */\n    this._rootElement = rootElement;\n\n    /**\n     * @type {Set<Node>}\n     * All managed focusable nodes in this InertRoot's subtree.\n     */\n    this._managedNodes = new Set([]);\n\n    // Make the subtree hidden from assistive technology\n    this._rootElement.setAttribute('aria-hidden', 'true');\n\n    // Make all focusable elements in the subtree unfocusable and add them to _managedNodes\n    this._makeSubtreeUnfocusable(this._rootElement);\n\n    // Watch for:\n    // - any additions in the subtree: make them unfocusable too\n    // - any removals from the subtree: remove them from this inert root's managed nodes\n    // - attribute changes: if `tabindex` is added, or removed from an intrinsically focusable element,\n    //   make that node a managed node.\n    this._observer = new MutationObserver(this._onMutation.bind(this));\n    this._observer.observe(this._rootElement, { attributes: true, childList: true, subtree: true });\n  }\n\n  /**\n   * Call this whenever this object is about to become obsolete.  This unwinds all of the state\n   * stored in this object and updates the state of all of the managed nodes.\n   */\n  destructor() {\n    this._observer.disconnect();\n    this._observer = null;\n\n    if (this._rootElement)\n      this._rootElement.removeAttribute('aria-hidden');\n    this._rootElement = null;\n\n    for (let inertNode of this._managedNodes)\n      this._unmanageNode(inertNode.node);\n\n    this._managedNodes = null;\n\n    this._inertManager = null;\n  }\n\n  /**\n   * @return {Set<InertNode>} A copy of this InertRoot's managed nodes set.\n   */\n  get managedNodes() {\n    return new Set(this._managedNodes);\n  }\n\n  /**\n   * @param {Node} startNode\n   */\n  _makeSubtreeUnfocusable(startNode) {\n    composedTreeWalk(startNode, (node) => { this._visitNode(node); });\n\n    let activeElement = document.activeElement;\n    if (!document.contains(startNode)) {\n      // startNode may be in shadow DOM, so find its nearest shadowRoot to get the activeElement.\n      let node = startNode;\n      let root = undefined;\n      while (node) {\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          root = node;\n          break;\n        }\n        node = node.parentNode;\n      }\n      if (root)\n        activeElement = root.activeElement\n    }\n    if (startNode.contains(activeElement))\n      activeElement.blur();\n  }\n\n  /**\n   * @param {Node} node\n   */\n  _visitNode(node) {\n    if (node.nodeType !== Node.ELEMENT_NODE)\n      return;\n\n    // If a descendant inert root becomes un-inert, its descendants will still be inert because of this\n    // inert root, so all of its managed nodes need to be adopted by this InertRoot.\n    if (node !== this._rootElement && node.hasAttribute('inert'))\n      this._adoptInertRoot(node);\n\n    if (node.matches(_focusableElementsString) || node.hasAttribute('tabindex'))\n      this._manageNode(node);\n  }\n\n  /**\n   * Register the given node with this InertRoot and with InertManager.\n   * @param {Node} node\n   */\n  _manageNode(node) {\n    const inertNode = this._inertManager.register(node, this);\n    this._managedNodes.add(inertNode);\n  }\n\n  /**\n   * Unregister the given node with this InertRoot and with InertManager.\n   * @param {Node} node\n   */\n  _unmanageNode(node) {\n    const inertNode = this._inertManager.deregister(node, this);\n    if (inertNode)\n      this._managedNodes.delete(inertNode);\n  }\n\n  /**\n   * Unregister the entire subtree starting at `startNode`.\n   * @param {Node} startNode\n   */\n  _unmanageSubtree(startNode) {\n    composedTreeWalk(startNode, (node) => { this._unmanageNode(node); });\n  }\n\n  /**\n   * If a descendant node is found with an `inert` attribute, adopt its managed nodes.\n   * @param {Node} node\n   */\n  _adoptInertRoot(node) {\n    let inertSubroot = this._inertManager.getInertRoot(node);\n\n    // During initialisation this inert root may not have been registered yet,\n    // so register it now if need be.\n    if (!inertSubroot) {\n      this._inertManager.setInert(node, true);\n      inertSubroot = this._inertManager.getInertRoot(node);\n    }\n\n    for (let savedInertNode of inertSubroot.managedNodes)\n      this._manageNode(savedInertNode.node);\n  }\n\n  /**\n   * Callback used when mutation observer detects subtree additions, removals, or attribute changes.\n   * @param {MutationRecord} records\n   * @param {MutationObserver} self\n   */\n  _onMutation(records, self) {\n    for (let record of records) {\n      const target = record.target;\n      if (record.type === 'childList') {\n        // Manage added nodes\n        for (let node of Array.from(record.addedNodes))\n          this._makeSubtreeUnfocusable(node);\n\n        // Un-manage removed nodes\n        for (let node of Array.from(record.removedNodes))\n          this._unmanageSubtree(node);\n      } else if (record.type === 'attributes') {\n        if (record.attributeName === 'tabindex') {\n          // Re-initialise inert node if tabindex changes\n          this._manageNode(target);\n        } else if (target !== this._rootElement &&\n                   record.attributeName === 'inert' &&\n                   target.hasAttribute('inert')) {\n          // If a new inert root is added, adopt its managed nodes and make sure it knows about the\n          // already managed nodes from this inert subroot.\n          this._adoptInertRoot(target);\n          const inertSubroot = this._inertManager.getInertRoot(target);\n          for (let managedNode of this._managedNodes) {\n            if (target.contains(managedNode.node))\n              inertSubroot._manageNode(managedNode.node);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * `InertNode` initialises and manages a single inert node.\n * A node is inert if it is a descendant of one or more inert root elements.\n *\n * On construction, `InertNode` saves the existing `tabindex` value for the node, if any, and\n * either removes the `tabindex` attribute or sets it to `-1`, depending on whether the element\n * is intrinsically focusable or not.\n *\n * `InertNode` maintains a set of `InertRoot`s which are descendants of this `InertNode`. When an\n * `InertRoot` is destroyed, and calls `InertManager.deregister()`, the `InertManager` notifies the\n * `InertNode` via `removeInertRoot()`, which in turn destroys the `InertNode` if no `InertRoot`s\n * remain in the set. On destruction, `InertNode` reinstates the stored `tabindex` if one exists,\n * or removes the `tabindex` attribute if the element is intrinsically focusable.\n */\nclass InertNode {\n  /**\n   * @param {Node} node A focusable element to be made inert.\n   * @param {InertRoot} inertRoot The inert root element associated with this inert node.\n   */\n  constructor(node, inertRoot) {\n    /** @type {Node} */\n    this._node = node;\n\n    /** @type {boolean} */\n    this._overrodeFocusMethod = false;\n\n    /**\n     * @type {Set<InertRoot>} The set of descendant inert roots.\n     *    If and only if this set becomes empty, this node is no longer inert.\n     */\n    this._inertRoots = new Set([inertRoot]);\n\n    /** @type {boolean} */\n    this._destroyed = false;\n\n    // Save any prior tabindex info and make this node untabbable\n    this.ensureUntabbable();\n  }\n\n  /**\n   * Call this whenever this object is about to become obsolete.\n   * This makes the managed node focusable again and deletes all of the previously stored state.\n   */\n  destructor() {\n    this._throwIfDestroyed();\n\n    if (this._node) {\n      if (this.hasSavedTabIndex)\n        this._node.setAttribute('tabindex', this.savedTabIndex);\n      else\n        this._node.removeAttribute('tabindex');\n\n      // Use `delete` to restore native focus method.\n      if (this._overrodeFocusMethod)\n        delete this._node.focus;\n    }\n    this._node = null;\n    this._inertRoots = null;\n\n    this._destroyed = true;\n  }\n\n  /**\n   * @type {boolean} Whether this object is obsolete because the managed node is no longer inert.\n   * If the object has been destroyed, any attempt to access it will cause an exception.\n   */\n  get destroyed() {\n    return this._destroyed;\n  }\n\n  _throwIfDestroyed() {\n    if (this.destroyed)\n      throw new Error(\"Trying to access destroyed InertNode\");\n  }\n\n  /** @return {boolean} */\n  get hasSavedTabIndex() {\n    return '_savedTabIndex' in this;\n  }\n\n  /** @return {Node} */\n  get node() {\n    this._throwIfDestroyed();\n    return this._node;\n  }\n\n  /** @param {number} tabIndex */\n  set savedTabIndex(tabIndex) {\n    this._throwIfDestroyed();\n    this._savedTabIndex = tabIndex;\n  }\n\n  /** @return {number} */\n  get savedTabIndex() {\n    this._throwIfDestroyed();\n    return this._savedTabIndex;\n  }\n\n  /** Save the existing tabindex value and make the node untabbable and unfocusable */\n  ensureUntabbable() {\n    const node = this.node;\n    if (node.matches(_focusableElementsString)) {\n      if (node.tabIndex === -1 && this.hasSavedTabIndex)\n        return;\n\n      if (node.hasAttribute('tabindex'))\n        this._savedTabIndex = node.tabIndex;\n      node.setAttribute('tabindex', '-1');\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        node.focus = function() {};\n        this._overrodeFocusMethod = true;\n      }\n    } else if (node.hasAttribute('tabindex')) {\n      this._savedTabIndex = node.tabIndex;\n      node.removeAttribute('tabindex');\n    }\n  }\n\n  /**\n   * Add another inert root to this inert node's set of managing inert roots.\n   * @param {InertRoot} inertRoot\n   */\n  addInertRoot(inertRoot) {\n    this._throwIfDestroyed();\n    this._inertRoots.add(inertRoot);\n  }\n\n  /**\n   * Remove the given inert root from this inert node's set of managing inert roots.\n   * If the set of managing inert roots becomes empty, this node is no longer inert,\n   * so the object should be destroyed.\n   * @param {InertRoot} inertRoot\n   */\n  removeInertRoot(inertRoot) {\n    this._throwIfDestroyed();\n    this._inertRoots.delete(inertRoot);\n    if (this._inertRoots.size === 0)\n      this.destructor();\n  }\n}\n\n/**\n * InertManager is a per-document singleton object which manages all inert roots and nodes.\n *\n * When an element becomes an inert root by having an `inert` attribute set and/or its `inert`\n * property set to `true`, the `setInert` method creates an `InertRoot` object for the element.\n * The `InertRoot` in turn registers itself as managing all of the element's focusable descendant\n * nodes via the `register()` method. The `InertManager` ensures that a single `InertNode` instance\n * is created for each such node, via the `_managedNodes` map.\n */\nclass InertManager {\n  /**\n   * @param {Document} document\n   */\n  constructor(document) {\n    if (!document)\n      throw new Error('Missing required argument; InertManager needs to wrap a document.');\n\n    /** @type {Document} */\n    this._document = document;\n\n    /**\n     * All managed nodes known to this InertManager. In a map to allow looking up by Node.\n     * @type {Map<Node, InertNode>}\n     */\n    this._managedNodes = new Map();\n\n    /**\n     * All inert roots known to this InertManager. In a map to allow looking up by Node.\n     * @type {Map<Node, InertRoot>}\n     */\n    this._inertRoots = new Map();\n\n    /**\n     * Observer for mutations on `document.body`.\n     * @type {MutationObserver}\n     */\n    this._observer = new MutationObserver(this._watchForInert.bind(this));\n\n\n    // Add inert style.\n    addInertStyle(document.head || document.body || document.documentElement);\n\n    // Wait for document to be loaded.\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', this._onDocumentLoaded.bind(this));\n    } else {\n      this._onDocumentLoaded();\n    }\n  }\n\n  /**\n   * Set whether the given element should be an inert root or not.\n   * @param {Element} root\n   * @param {boolean} inert\n   */\n  setInert(root, inert) {\n    if (inert) {\n      if (this._inertRoots.has(root))   // element is already inert\n        return;\n\n      const inertRoot = new InertRoot(root, this);\n      root.setAttribute('inert', '');\n      this._inertRoots.set(root, inertRoot);\n      // If not contained in the document, it must be in a shadowRoot.\n      // Ensure inert styles are added there.\n      if (!this._document.body.contains(root)) {\n        let parent = root.parentNode;\n        while (parent) {\n          if (parent.nodeType === 11) {\n            addInertStyle(parent);\n          }\n          parent = parent.parentNode;\n        }\n      }\n    } else {\n      if (!this._inertRoots.has(root))  // element is already non-inert\n        return;\n\n      const inertRoot = this._inertRoots.get(root);\n      inertRoot.destructor();\n      this._inertRoots.delete(root);\n      root.removeAttribute('inert');\n    }\n  }\n\n  /**\n   * Get the InertRoot object corresponding to the given inert root element, if any.\n   * @param {Element} element\n   * @return {InertRoot?}\n   */\n  getInertRoot(element) {\n    return this._inertRoots.get(element);\n  }\n\n  /**\n   * Register the given InertRoot as managing the given node.\n   * In the case where the node has a previously existing inert root, this inert root will\n   * be added to its set of inert roots.\n   * @param {Node} node\n   * @param {InertRoot} inertRoot\n   * @return {InertNode} inertNode\n   */\n  register(node, inertRoot) {\n    let inertNode = this._managedNodes.get(node);\n    if (inertNode !== undefined) {  // node was already in an inert subtree\n      inertNode.addInertRoot(inertRoot);\n      // Update saved tabindex value if necessary\n      inertNode.ensureUntabbable();\n    } else {\n      inertNode = new InertNode(node, inertRoot);\n    }\n\n    this._managedNodes.set(node, inertNode);\n\n    return inertNode;\n  }\n\n  /**\n   * De-register the given InertRoot as managing the given inert node.\n   * Removes the inert root from the InertNode's set of managing inert roots, and remove the inert\n   * node from the InertManager's set of managed nodes if it is destroyed.\n   * If the node is not currently managed, this is essentially a no-op.\n   * @param {Node} node\n   * @param {InertRoot} inertRoot\n   * @return {InertNode?} The potentially destroyed InertNode associated with this node, if any.\n   */\n  deregister(node, inertRoot) {\n    const inertNode = this._managedNodes.get(node);\n    if (!inertNode)\n      return null;\n\n    inertNode.removeInertRoot(inertRoot);\n    if (inertNode.destroyed)\n      this._managedNodes.delete(node);\n\n    return inertNode;\n  }\n\n  /**\n   * Callback used when document has finished loading.\n   */\n  _onDocumentLoaded() {\n    // Find all inert roots in document and make them actually inert.\n    const inertElements = Array.from(this._document.querySelectorAll('[inert]'));\n    for (let inertElement of inertElements)\n      this.setInert(inertElement, true);\n\n    // Comment this out to use programmatic API only.\n    this._observer.observe(this._document.body, { attributes: true, subtree: true, childList: true });\n  }\n\n  /**\n   * Callback used when mutation observer detects attribute changes.\n   * @param {MutationRecord} records\n   * @param {MutationObserver} self\n   */\n  _watchForInert(records, self) {\n    for (let record of records) {\n      switch (record.type) {\n      case 'childList':\n        for (let node of Array.from(record.addedNodes)) {\n          if (node.nodeType !== Node.ELEMENT_NODE)\n            continue;\n          const inertElements = Array.from(node.querySelectorAll('[inert]'));\n          if (node.matches('[inert]'))\n            inertElements.unshift(node);\n          for (let inertElement of inertElements)\n            this.setInert(inertElement, true);\n        }\n        break;\n      case 'attributes':\n        if (record.attributeName !== 'inert')\n          continue;\n        const target = record.target;\n        const inert = target.hasAttribute('inert');\n        this.setInert(target, inert);\n        break;\n      }\n    }\n  }\n}\n\n /**\n  * Recursively walk the composed tree from |node|.\n  * @param {Node} node\n  * @param {(function (Element))=} callback Callback to be called for each element traversed,\n  *     before descending into child nodes.\n  * @param {ShadowRoot=} shadowRootAncestor The nearest ShadowRoot ancestor, if any.\n  */\nfunction composedTreeWalk(node, callback, shadowRootAncestor) {\n  if (node.nodeType == Node.ELEMENT_NODE) {\n    const element = /** @type {Element} */ (node);\n    if (callback)\n      callback(element)\n\n    // Descend into node:\n    // If it has a ShadowRoot, ignore all child elements - these will be picked\n    // up by the <content> or <shadow> elements. Descend straight into the\n    // ShadowRoot.\n    const shadowRoot = element.shadowRoot || element.webkitShadowRoot;\n    if (shadowRoot) {\n      composedTreeWalk(shadowRoot, callback, shadowRoot);\n      return;\n    }\n\n    // If it is a <content> element, descend into distributed elements - these\n    // are elements from outside the shadow root which are rendered inside the\n    // shadow DOM.\n    if (element.localName == 'content') {\n      const content = /** @type {HTMLContentElement} */ (element);\n      // Verifies if ShadowDom v0 is supported.\n      const distributedNodes = content.getDistributedNodes ?\n        content.getDistributedNodes() : [];\n      for (let i = 0; i < distributedNodes.length; i++) {\n        composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n      }\n      return;\n    }\n\n    // If it is a <slot> element, descend into assigned nodes - these\n    // are elements from outside the shadow root which are rendered inside the\n    // shadow DOM.\n    if (element.localName == 'slot') {\n      const slot = /** @type {HTMLSlotElement} */ (element);\n      // Verify if ShadowDom v1 is supported.\n      const distributedNodes = slot.assignedNodes ?\n        slot.assignedNodes({ flatten: true }) : [];\n      for (let i = 0; i < distributedNodes.length; i++) {\n        composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n      }\n      return;\n    }\n  }\n\n  // If it is neither the parent of a ShadowRoot, a <content> element, a <slot>\n  // element, nor a <shadow> element recurse normally.\n  let child = node.firstChild;\n  while (child != null) {\n    composedTreeWalk(child, callback, shadowRootAncestor);\n    child = child.nextSibling;\n  }\n}\n\n/**\n * Adds a style element to the node containing the inert specific styles\n * @param {Node} node\n */\nfunction addInertStyle(node) {\n  if (node.querySelector('style#inert-style')) {\n    return;\n  }\n  const style = document.createElement('style');\n  style.setAttribute('id', 'inert-style');\n  style.textContent = \"\\n\"+\n                      \"[inert] {\\n\" +\n                      \"  pointer-events: none;\\n\" +\n                      \"  cursor: default;\\n\" +\n                      \"}\\n\" +\n                      \"\\n\" +\n                      \"[inert], [inert] * {\\n\" +\n                      \"  user-select: none;\\n\" +\n                      \"  -webkit-user-select: none;\\n\" +\n                      \"  -moz-user-select: none;\\n\" +\n                      \"  -ms-user-select: none;\\n\" +\n                      \"}\\n\";\n  node.appendChild(style);\n}\n\nconst inertManager = new InertManager(document);\n\nObject.defineProperty(Element.prototype, 'inert', {\n                        enumerable: true,\n                        get: function() { return this.hasAttribute('inert'); },\n                        set: function(inert) { inertManager.setInert(this, inert) }\n                      });\n\n})(document);\n","(function() {\n  'use strict';\n  var db;\n\n  function getDB() {\n    if (!db) {\n      db = new Promise(function(resolve, reject) {\n        var openreq = indexedDB.open('keyval-store', 1);\n        \n        openreq.onerror = function() {\n          reject(openreq.error);\n        };\n        \n        openreq.onupgradeneeded = function() {\n          // First time setup: create an empty object store\n          openreq.result.createObjectStore('keyval');\n        };\n\n        openreq.onsuccess = function() {\n          resolve(openreq.result);\n        };\n      });\n    }\n    return db;\n  }\n\n  function withStore(type, callback) {\n    return getDB().then(function(db) {\n      return new Promise(function(resolve, reject) {\n        var transaction = db.transaction('keyval', type);\n        transaction.oncomplete = function() {\n          resolve();\n        };\n        transaction.onerror = function() {\n          reject(transaction.error);\n        };\n        callback(transaction.objectStore('keyval'));\n      });\n    });\n  }\n\n  var idbKeyval = {\n    get: function(key) {\n      var req;\n      return withStore('readonly', function(store) {\n        req = store.get(key);\n      }).then(function() {\n        return req.result;\n      });\n    },\n    set: function(key, value) {\n      return withStore('readwrite', function(store) {\n        store.put(value, key);\n      });\n    },\n    delete: function(key) {\n      return withStore('readwrite', function(store) {\n        store.delete(key);\n      });\n    },\n    clear: function() {\n      return withStore('readwrite', function(store) {\n        store.clear();\n      });\n    },\n    keys: function() {\n      var keys = [];\n      return withStore('readonly', function(store) {\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // And openKeyCursor isn't supported by Safari.\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function() {\n          if (!this.result) return;\n          keys.push(this.result.key);\n          this.result.continue();\n        };  \n      }).then(function() {\n        return keys;\n      });\n    }\n  };\n\n  if (typeof module != 'undefined' && module.exports) {\n    module.exports = idbKeyval;\n  } else {\n    self.idbKeyval = idbKeyval;\n  }\n}());\n"],"sourceRoot":"/source/"}