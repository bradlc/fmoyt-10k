{"version":3,"sources":["main.js","_inert.js","_idb_keyval.js"],"names":["formatDate","date","months","year","substring","month","parseInt","day","once","fn","context","result","InertRoot","apply","this","arguments","debounce","func","wait","immediate","timeout","args","later","callNow","_rootElement","setAttribute","get","url","success","xhr","window","XMLHttpRequest","ActiveXObject","open","onreadystatechange","_observer","MutationObserver","_onMutation","bind","setRequestHeader","send","flip","e","preventDefault","poster","querySelector","modalActive","image","src","currentSrc","style","backgroundImage","classList","add","body","fromRect","_unmanageNode","toRect","getBoundingClientRect","scale","width","left","top","transform","remove","opacity","addEventListener","node","matches","_focusableElementsString","inert","inertNode","_inertManager","_managedNodes","disabled","focusedItem","focus","borderRadius","href","target","closest","data","movieData","JSON","parse","textContent","title","overview","release_date","youtube_id","startNode","_visitNode","activeElement","document","contains","length","i","root","undefined","nodeType","requestAnimationFrame","createGridItem","id","releaseDate","li","createElement","inertSubroot","a","div","img","savedInertNode","alt","_manageNode","h3","time","appendChild","getPerRow","items","newTop","record","getNodeIndex","previousElementSibling","composedTreeWalk","callback","shadowRootAncestor","Node","ELEMENT_NODE","element","shadowRoot","webkitShadowRoot","localName","content","distributedNodes","getDistributedNodes","slot","assignedNodes","flatten","child","firstChild","nextSibling","addInertStyle","join","rootElement","inertManager","Set","_makeSubtreeUnfocusable","observe","attributes","childList","subtree","disconnect","removeAttribute","_step","Symbol","iterator","_iteratorNormalCompletion","_iterator","next","done","value","DOCUMENT_FRAGMENT_NODE","parentNode","blur","hasAttribute","_adoptInertRoot","register","deregister","delete","getInertRoot","setInert","_step2","managedNodes","_iteratorNormalCompletion2","_iterator2","records","self","_step3","_iteratorNormalCompletion3","_iterator3","type","_step4","Array","from","addedNodes","_iteratorNormalCompletion4","_iterator4","_step5","removedNodes","_iteratorNormalCompletion5","_iterator5","_unmanageSubtree","attributeName","_step6","_iteratorNormalCompletion6","_iterator6","managedNode","InertNode","inertRoot","_node","_overrodeFocusMethod","_inertRoots","_destroyed","ensureUntabbable","_throwIfDestroyed","hasSavedTabIndex","savedTabIndex","destroyed","Error","tabIndex","_savedTabIndex","size","destructor","InertManager","_document","Map","_watchForInert","head","documentElement","readyState","_onDocumentLoaded","has","set","parent","addInertRoot","removeInertRoot","inertElements","querySelectorAll","_step7","_iteratorNormalCompletion7","_iterator7","inertElement","_step8","_iteratorNormalCompletion8","_iterator8","_step9","_iteratorNormalCompletion9","_iterator9","unshift","_step10","_iteratorNormalCompletion10","_iterator10","defineProperty","Element","prototype","getDB","db","Promise","resolve","reject","openreq","indexedDB","onerror","error","onupgradeneeded","createObjectStore","onsuccess","withStore","then","transaction","oncomplete","objectStore","idbKeyval","key","req","store","put","clear","keys","openKeyCursor","openCursor","call","push","continue","module","exports","videoActive","activeItem","activeMovie","main","header","footer","movieContainer","movieContainerBg","movie","movieInner","movieFront","movieBack","movieBackPoster","movieTitle","movieOverview","movieReleaseDate","movieLink","grid","saveBtn","saveBtnText","saveBtnIcon","savedCount","watch","iframe","UP","RIGHT","DOWN","LEFT","ESC","item","loadMore","link","currentPage","match","movies","els","createDocumentFragment","init","perRow","which","activeEl","currentIndex","newIndex","saved","save","slice","_","console","log","innerHTML","tablist","tabs","panels","getAttribute","ul"],"mappings":"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","file":"main.js","sourcesContent":["/* global imgix */\n\nimport './_inert.js';\nimport './_idb_keyval.js';\n\nlet modalActive = false;\nlet videoActive = false;\nlet activeItem = null;\nlet activeMovie = null;\n\nconst main = document.querySelector('.js-main');\nconst header = document.querySelector('.js-header');\nconst footer = document.querySelector('.js-footer');\nconst movieContainer = document.querySelector('.js-movie-container');\nconst movieContainerBg = document.querySelector('.js-movie-container-bg');\nconst movie = document.querySelector('.js-movie');\nconst movieInner = document.querySelector('.js-movie-inner');\nconst movieFront = document.querySelector('.js-movie-front');\nconst movieBack = document.querySelector('.js-movie-back');\nconst movieBackPoster = document.querySelector('.js-movie-back-poster');\n\nconst movieTitle = document.querySelector('.js-movie-title');\nconst movieOverview = document.querySelector('.js-movie-overview');\nconst movieReleaseDate = document.querySelector('.js-movie-release-date');\nconst movieLink = document.querySelector('.js-movie-link');\n\nconst grid = document.querySelector('.js-grid');\nlet items = document.querySelectorAll('.js-grid-item');\n\nconst saveBtn = document.querySelector('.js-save');\nconst saveBtnText = document.querySelector('.js-save .btn__text');\nconst saveBtnIcon = document.querySelector('.js-save .btn__icon');\nlet savedCount = 0;\n\nconst watch = document.querySelector('.js-watch');\nconst iframe = document.querySelector('.js-iframe');\n\nlet focusedItem = null;\n\nconst UP = 38;\nconst RIGHT = 39;\nconst DOWN = 40;\nconst LEFT = 37;\nconst ESC = 27;\n\nif (!movieContainer.classList.contains('movie-container--single')) {\n  movieContainer.inert = true;\n}\n\nwatch.inert = true;\n\nfunction formatDate(date) {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const year = date.substring(0, 4);\n  let month = date.substring(5, 7);\n  month = (month.substring(0, 1) === '0') ? month.substring(1) : month;\n  month = months[parseInt(month, 10) - 1];\n  let day = date.substring(8, 10);\n  day = (day.substring(0, 1) === '0') ? day.substring(1) : day;\n  return `${day} ${month} ${year}`;\n}\n\n/* eslint-disable */\nfunction once(fn, context) {\n  let result;\n\n  return function () {\n    if (fn) {\n      result = fn.apply(context || this, arguments);\n      fn = null;\n    }\n\n    return result;\n  };\n}\n\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function() {\n    const context = this;\n    const args = arguments;\n    const later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nfunction get(url, success) {\n  var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');\n  xhr.open('GET', url);\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState > 3 && xhr.status === 200) success(xhr.responseText);\n  };\n\n  xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  xhr.send();\n\n  return xhr;\n}\n/* eslint-enable */\n\nfunction flip(e) {\n  if (typeof e !== 'undefined') e.preventDefault();\n\n  const poster = this.querySelector('.js-grid-poster');\n\n  // update poster\n  if (!modalActive) {\n    const image = poster.querySelector('img');\n    const src = typeof image.currentSrc !== 'undefined' ? image.currentSrc : image.src;\n    movieFront.style.backgroundImage = `url('${src}')`;\n    movieBackPoster.style.backgroundImage = `url('${src}')`;\n\n    movieContainer.classList.add('movie-container--visible');\n\n    document.body.classList.add('no-scroll');\n  }\n\n  const fromRect = movie.getBoundingClientRect();\n  const toRect = poster.getBoundingClientRect();\n\n  const scale = 1 / (fromRect.width / toRect.width);\n  const left = toRect.left - fromRect.left;\n  const top = toRect.top - fromRect.top;\n\n  movie.style.transform = `translate(${left}px, ${top}px)`;\n  movieInner.style.transform = `scale(${scale})`;\n\n  // border radius\n  if (!modalActive) {\n    const borderRadius = 3 * (1 / scale);\n    movieFront.style.borderRadius = `${borderRadius}px`;\n    movieBack.style.borderRadius = `${borderRadius}px`;\n\n    poster.style.opacity = 0;\n\n    movieContainer.inert = false;\n    main.inert = true;\n    header.inert = true;\n    footer.inert = true;\n\n    const href = e.target.closest('a').href;\n\n    get(href, data => {\n      const movieData = JSON.parse(data);\n      movieTitle.textContent = movieData.title;\n      movieOverview.textContent = movieData.overview;\n      movieReleaseDate.textContent = formatDate(movieData.release_date);\n      movieLink.href = `https://www.youtube.com/watch?v=${movieData.youtube_id}`;\n\n      activeMovie = {\n        title: movieData.title,\n        overview: movieData.overview,\n        poster: movieData.poster,\n        release_date: movieData.release_date,\n        id: movieData.youtube_id,\n      };\n\n      idbKeyval.get('fmoyt-saved').then(saved => {\n        if (!saved || typeof saved === 'undefined') return;\n\n        for (let i = 0; i < saved.length; i++) {\n          if (saved[i].id === movieData.youtube_id) {\n            saveBtnText.textContent = 'Saved';\n            saveBtnIcon.innerHTML = `<svg viewBox=\"0 0 24 24\"><path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"/></svg>`;\n            saveBtn.disabled = true;\n            break;\n          }\n        }\n      });\n\n      saveBtn.setAttribute('data-title', movieData.title);\n      saveBtn.setAttribute('data-id', movieData.youtube_id);\n    });\n\n    window.requestAnimationFrame(() => {\n      movieContainer.classList.add('movie-container--animate');\n      movieInner.style.transform = 'none';\n      movie.style.transform = 'none';\n      movieContainerBg.style.opacity = 1;\n      movie.classList.add('movie--flipped');\n    });\n  } else {\n    movie.classList.remove('movie--flipped');\n    movieContainerBg.style.opacity = 0;\n    movie.addEventListener('transitionend', once(() => {\n      poster.style.opacity = 1;\n      movieContainer.classList.remove('movie-container--animate');\n      movieContainer.classList.remove('movie-container--visible');\n      document.body.classList.remove('no-scroll');\n      movie.style.transform = 'none';\n      movieInner.style.transform = 'none';\n\n      movieContainer.inert = true;\n      main.inert = false;\n      header.inert = false;\n      footer.inert = false;\n\n      // reset save button\n      saveBtnText.textContent = 'Save';\n      saveBtnIcon.innerHTML = `<svg viewBox=\"0 0 24 24\"><path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z\"/></svg>`;\n      saveBtn.disabled = false;\n\n      if (focusedItem) {\n        focusedItem.focus();\n      }\n    }));\n  }\n\n  modalActive = !modalActive;\n  activeItem = this;\n}\n\nif (grid) {\n  window.addEventListener('click', e => {\n    const item = e.target.closest('.js-grid-item');\n    if (item) {\n      e.preventDefault();\n      flip.bind(item, e)();\n    }\n  });\n\n  grid.addEventListener('focus', e => {\n    focusedItem = e.target.closest('.js-grid-item');\n  }, true);\n}\n\nmovieContainerBg.addEventListener('click', () => {\n  flip.bind(activeItem)();\n});\n\ndocument.querySelector('.js-close-movie').addEventListener('click', () => {\n  flip.bind(activeItem)();\n});\n\n/**\n * Load more\n */\nconst loadMore = document.querySelector('.js-load-more');\n\nfunction createGridItem(id, poster, title, releaseDate) {\n  const li = document.createElement('li');\n  li.classList.add('grid-item');\n\n  const a = document.createElement('a');\n  a.href = `/${id}`;\n  a.classList.add('js-grid-item');\n\n  const div = document.createElement('div');\n  div.classList.add('grid-item__poster');\n  div.classList.add('js-grid-poster');\n\n  const img = document.createElement('img');\n  img.setAttribute('ix-src', `https://fmoyt-10k.imgix.net${poster}?w=320&amp;h=480&amp;fit=crop&amp;auto=format,compress`);\n  img.alt = '';\n  img.setAttribute('sizes', '170px');\n  img.classList.add('lazyload');\n\n  const h3 = document.createElement('h3');\n  h3.textContent = title;\n\n  const year = releaseDate.substring(0, 4);\n  const time = document.createElement('time');\n  time.setAttribute('datetime', year);\n  time.classList.add('mono');\n  time.textContent = year;\n\n  div.appendChild(img);\n  a.appendChild(div);\n  a.appendChild(h3);\n  a.appendChild(time);\n  li.appendChild(a);\n\n  return li;\n}\n\nif (loadMore) {\n  loadMore.addEventListener('click', e => {\n    e.preventDefault();\n\n    const link = e.target.closest('a');\n    const href = link.href;\n\n    let currentPage = href.match(/[0-9]+$/);\n    currentPage = parseInt(currentPage[0], 10);\n    link.href = `/page/${currentPage + 1}`;\n\n    link.setAttribute('disabled', 'disabled');\n\n    if (currentPage === 20) {\n      link.style.display = 'none';\n    }\n\n    get(href, data => {\n      const movies = JSON.parse(data);\n      const els = document.createDocumentFragment();\n      for (let i = 0; i < movies.length; i++) {\n        const li = createGridItem(movies[i].youtube_id, movies[i].poster, movies[i].title, movies[i].release_date);\n        els.appendChild(li);\n      }\n\n      grid.appendChild(els);\n      link.removeAttribute('disabled');\n\n      requestAnimationFrame(() => {\n        items = document.querySelectorAll('.js-grid-item');\n        imgix.init({\n          srcAttribute: 'data-src',\n          srcsetAttribute: 'data-srcset',\n          sizesAttribute: 'data-sizes',\n        });\n      });\n    });\n  });\n}\n\n/**\n * Keyboard nav\n */\nfunction getPerRow() {\n  let top = null;\n  let i;\n  for (i = 0; i < items.length; i++) {\n    const newTop = items[i].getBoundingClientRect().top;\n    if (top !== null && newTop !== top) {\n      break;\n    }\n    top = newTop;\n  }\n  return i;\n}\nlet perRow = getPerRow();\nwindow.addEventListener('resize', debounce(() => {\n  perRow = getPerRow();\n}, 250));\n\ndocument.addEventListener('keydown', e => {\n  if (e.which !== UP && e.which !== RIGHT && e.which !== DOWN && e.which !== LEFT) return;\n  const activeEl = document.activeElement;\n  if (!activeEl.closest('.grid-item')) {\n    items[0].focus();\n    return;\n  }\n  const currentIndex = getNodeIndex(activeEl.closest('.grid-item'));\n  let newIndex;\n  if (e.which === LEFT) {\n    newIndex = currentIndex - 1;\n  }\n  if (e.which === RIGHT) {\n    newIndex = currentIndex + 1;\n  }\n  if (e.which === DOWN) {\n    newIndex = currentIndex + perRow;\n  }\n  if (e.which === UP) {\n    newIndex = currentIndex - perRow;\n  }\n  if (newIndex >= 0 && newIndex < items.length) {\n    items[newIndex].focus();\n  }\n});\n\ndocument.addEventListener('keydown', e => {\n  if (e.which === ESC && videoActive) {\n    videoActive = false;\n    watch.classList.remove('watch--active');\n    watch.addEventListener('transitionend', once(() => {\n      iframe.src = '';\n      watch.inert = true;\n      movieContainer.inert = false;\n    }));\n    return;\n  }\n  if (e.which === ESC && modalActive) {\n    flip.bind(activeItem)();\n  }\n});\n\nfunction getNodeIndex(node) {\n  for (var i = 0; node = node.previousElementSibling; i++);\n  return i;\n}\n\n\n/**\n * Save\n */\nsaveBtn.addEventListener('click', e => {\n  const btn = e.target.closest('.js-save');\n  idbKeyval.get('fmoyt-saved').then(saved => {\n    let save;\n    if (typeof saved === 'undefined') {\n      save = [];\n    } else {\n      save = saved.slice(0);\n    }\n    save.push(activeMovie);\n    idbKeyval.set('fmoyt-saved', save).then(_ => console.log('saved'));\n\n    saveBtnText.textContent = 'Saved';\n    saveBtnIcon.innerHTML = `<svg viewBox=\"0 0 24 24\"><path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"/></svg>`;\n    saveBtn.disabled = true;\n\n    // add to saved grid\n    const li = createGridItem(activeMovie.id, activeMovie.poster, activeMovie.title, activeMovie.release_date);\n    document.querySelector('.js-saved-grid').appendChild(li);\n\n    savedCount++;\n    document.querySelector('.js-saved-tab').textContent = `Saved (${savedCount})`;\n\n    requestAnimationFrame(() => {\n      items = document.querySelectorAll('.js-grid-item');\n      imgix.init({\n        srcAttribute: 'data-src',\n        srcsetAttribute: 'data-srcset',\n        sizesAttribute: 'data-sizes',\n      });\n    });\n  });\n});\n\n\n\nconst tablist = document.querySelector('.js-tablist');\n\nidbKeyval.get('fmoyt-saved').then(saved => {\n  if (saved && typeof saved !== 'undefined') {\n    savedCount = saved.length;\n  }\n\n  tablist.innerHTML = `<ul role=\"tablist\">\n      <li role=\"presentation\">\n        <a class=\"js-tab\" href=\"#all\" role=\"tab\" aria-controls=\"all\" aria-selected=\"true\">All</a>\n      </li>\n      <li role=\"presentation\">\n        <a class=\"js-tab js-saved-tab\" href=\"#saved\" role=\"tab\" aria-controls=\"saved\">Saved (${savedCount})</a>\n      </li>\n    </ul>`;\n});\n\nwindow.addEventListener('click', e => {\n  if (e.target.closest('.js-tab')) {\n    e.preventDefault();\n    const tabs = document.querySelectorAll('.js-tab');\n    const panels = document.querySelectorAll('[role=\"tabpanel\"]');\n    for (let i = 0; i < tabs.length; i++) {\n      tabs[i].removeAttribute('aria-selected');\n    }\n    e.target.closest('.js-tab').setAttribute('aria-selected', 'true');\n\n    for (let i = 0; i < panels.length; i++) {\n      panels[i].setAttribute('aria-hidden', 'true');\n    }\n    document.querySelector(e.target.closest('.js-tab').getAttribute('href')).removeAttribute('aria-hidden');\n  }\n});\n\n\nidbKeyval.get('fmoyt-saved').then(saved => {\n  if (saved) {\n    const ul = document.createDocumentFragment();\n    for (let i = 0; i < saved.length; i++) {\n      const li = createGridItem(saved[i].id, saved[i].poster, saved[i].title, saved[i].release_date);\n      ul.appendChild(li);\n    }\n    document.querySelector('.js-saved-grid').appendChild(ul);\n    requestAnimationFrame(() => {\n      items = document.querySelectorAll('.js-grid-item');\n      imgix.init({\n        srcAttribute: 'data-src',\n        srcsetAttribute: 'data-srcset',\n        sizesAttribute: 'data-sizes',\n      });\n    });\n  }\n});\n\n\nmovieLink.addEventListener('click', e => {\n  e.preventDefault();\n\n  watch.inert = false;\n  movieContainer.inert = true;\n  videoActive = true;\n  watch.classList.add('watch--active');\n  watch.addEventListener('transitionend', once(() => {\n    iframe.src = `https://www.youtube.com/embed/${activeMovie.id}?autoplay=1`;\n  }));\n});\n\n\ndocument.querySelector('.js-close-watch').addEventListener('click', () => {\n  videoActive = false;\n  watch.classList.remove('watch--active');\n  watch.addEventListener('transitionend', once(() => {\n    iframe.src = '';\n    watch.inert = true;\n    movieContainer.inert = false;\n  }));\n});\n","/**\n *\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(document) {\n\n/** @type {string} */\nconst _focusableElementsString = ['a[href]',\n                                  'area[href]',\n                                  'input:not([disabled])',\n                                  'select:not([disabled])',\n                                  'textarea:not([disabled])',\n                                  'button:not([disabled])',\n                                  'iframe',\n                                  'object',\n                                  'embed',\n                                  '[contenteditable]'].join(',');\n\n/**\n * `InertRoot` manages a single inert subtree, i.e. a DOM subtree whose root element has an `inert`\n * attribute.\n *\n * Its main functions are:\n *\n * - to create and maintain a set of managed `InertNode`s, including when mutations occur in the\n *   subtree. The `makeSubtreeUnfocusable()` method handles collecting `InertNode`s via registering\n *   each focusable node in the subtree with the singleton `InertManager` which manages all known\n *   focusable nodes within inert subtrees. `InertManager` ensures that a single `InertNode`\n *   instance exists for each focusable node which has at least one inert root as an ancestor.\n *\n * - to notify all managed `InertNode`s when this subtree stops being inert (i.e. when the `inert`\n *   attribute is removed from the root node). This is handled in the destructor, which calls the\n *   `deregister` method on `InertManager` for each managed inert node.\n */\nclass InertRoot {\n  /**\n   * @param {Element} rootElement The Element at the root of the inert subtree.\n   * @param {InertManager} inertManager The global singleton InertManager object.\n   */\n  constructor(rootElement, inertManager) {\n    /** @type {InertManager} */\n    this._inertManager = inertManager;\n\n    /** @type {Element} */\n    this._rootElement = rootElement;\n\n    /**\n     * @type {Set<Node>}\n     * All managed focusable nodes in this InertRoot's subtree.\n     */\n    this._managedNodes = new Set([]);\n\n    // Make the subtree hidden from assistive technology\n    this._rootElement.setAttribute('aria-hidden', 'true');\n\n    // Make all focusable elements in the subtree unfocusable and add them to _managedNodes\n    this._makeSubtreeUnfocusable(this._rootElement);\n\n    // Watch for:\n    // - any additions in the subtree: make them unfocusable too\n    // - any removals from the subtree: remove them from this inert root's managed nodes\n    // - attribute changes: if `tabindex` is added, or removed from an intrinsically focusable element,\n    //   make that node a managed node.\n    this._observer = new MutationObserver(this._onMutation.bind(this));\n    this._observer.observe(this._rootElement, { attributes: true, childList: true, subtree: true });\n  }\n\n  /**\n   * Call this whenever this object is about to become obsolete.  This unwinds all of the state\n   * stored in this object and updates the state of all of the managed nodes.\n   */\n  destructor() {\n    this._observer.disconnect();\n    this._observer = null;\n\n    if (this._rootElement)\n      this._rootElement.removeAttribute('aria-hidden');\n    this._rootElement = null;\n\n    for (let inertNode of this._managedNodes)\n      this._unmanageNode(inertNode.node);\n\n    this._managedNodes = null;\n\n    this._inertManager = null;\n  }\n\n  /**\n   * @return {Set<InertNode>} A copy of this InertRoot's managed nodes set.\n   */\n  get managedNodes() {\n    return new Set(this._managedNodes);\n  }\n\n  /**\n   * @param {Node} startNode\n   */\n  _makeSubtreeUnfocusable(startNode) {\n    composedTreeWalk(startNode, (node) => { this._visitNode(node); });\n\n    let activeElement = document.activeElement;\n    if (!document.contains(startNode)) {\n      // startNode may be in shadow DOM, so find its nearest shadowRoot to get the activeElement.\n      let node = startNode;\n      let root = undefined;\n      while (node) {\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          root = node;\n          break;\n        }\n        node = node.parentNode;\n      }\n      if (root)\n        activeElement = root.activeElement\n    }\n    if (startNode.contains(activeElement))\n      activeElement.blur();\n  }\n\n  /**\n   * @param {Node} node\n   */\n  _visitNode(node) {\n    if (node.nodeType !== Node.ELEMENT_NODE)\n      return;\n\n    // If a descendant inert root becomes un-inert, its descendants will still be inert because of this\n    // inert root, so all of its managed nodes need to be adopted by this InertRoot.\n    if (node !== this._rootElement && node.hasAttribute('inert'))\n      this._adoptInertRoot(node);\n\n    if (node.matches(_focusableElementsString) || node.hasAttribute('tabindex'))\n      this._manageNode(node);\n  }\n\n  /**\n   * Register the given node with this InertRoot and with InertManager.\n   * @param {Node} node\n   */\n  _manageNode(node) {\n    const inertNode = this._inertManager.register(node, this);\n    this._managedNodes.add(inertNode);\n  }\n\n  /**\n   * Unregister the given node with this InertRoot and with InertManager.\n   * @param {Node} node\n   */\n  _unmanageNode(node) {\n    const inertNode = this._inertManager.deregister(node, this);\n    if (inertNode)\n      this._managedNodes.delete(inertNode);\n  }\n\n  /**\n   * Unregister the entire subtree starting at `startNode`.\n   * @param {Node} startNode\n   */\n  _unmanageSubtree(startNode) {\n    composedTreeWalk(startNode, (node) => { this._unmanageNode(node); });\n  }\n\n  /**\n   * If a descendant node is found with an `inert` attribute, adopt its managed nodes.\n   * @param {Node} node\n   */\n  _adoptInertRoot(node) {\n    let inertSubroot = this._inertManager.getInertRoot(node);\n\n    // During initialisation this inert root may not have been registered yet,\n    // so register it now if need be.\n    if (!inertSubroot) {\n      this._inertManager.setInert(node, true);\n      inertSubroot = this._inertManager.getInertRoot(node);\n    }\n\n    for (let savedInertNode of inertSubroot.managedNodes)\n      this._manageNode(savedInertNode.node);\n  }\n\n  /**\n   * Callback used when mutation observer detects subtree additions, removals, or attribute changes.\n   * @param {MutationRecord} records\n   * @param {MutationObserver} self\n   */\n  _onMutation(records, self) {\n    for (let record of records) {\n      const target = record.target;\n      if (record.type === 'childList') {\n        // Manage added nodes\n        for (let node of Array.from(record.addedNodes))\n          this._makeSubtreeUnfocusable(node);\n\n        // Un-manage removed nodes\n        for (let node of Array.from(record.removedNodes))\n          this._unmanageSubtree(node);\n      } else if (record.type === 'attributes') {\n        if (record.attributeName === 'tabindex') {\n          // Re-initialise inert node if tabindex changes\n          this._manageNode(target);\n        } else if (target !== this._rootElement &&\n                   record.attributeName === 'inert' &&\n                   target.hasAttribute('inert')) {\n          // If a new inert root is added, adopt its managed nodes and make sure it knows about the\n          // already managed nodes from this inert subroot.\n          this._adoptInertRoot(target);\n          const inertSubroot = this._inertManager.getInertRoot(target);\n          for (let managedNode of this._managedNodes) {\n            if (target.contains(managedNode.node))\n              inertSubroot._manageNode(managedNode.node);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * `InertNode` initialises and manages a single inert node.\n * A node is inert if it is a descendant of one or more inert root elements.\n *\n * On construction, `InertNode` saves the existing `tabindex` value for the node, if any, and\n * either removes the `tabindex` attribute or sets it to `-1`, depending on whether the element\n * is intrinsically focusable or not.\n *\n * `InertNode` maintains a set of `InertRoot`s which are descendants of this `InertNode`. When an\n * `InertRoot` is destroyed, and calls `InertManager.deregister()`, the `InertManager` notifies the\n * `InertNode` via `removeInertRoot()`, which in turn destroys the `InertNode` if no `InertRoot`s\n * remain in the set. On destruction, `InertNode` reinstates the stored `tabindex` if one exists,\n * or removes the `tabindex` attribute if the element is intrinsically focusable.\n */\nclass InertNode {\n  /**\n   * @param {Node} node A focusable element to be made inert.\n   * @param {InertRoot} inertRoot The inert root element associated with this inert node.\n   */\n  constructor(node, inertRoot) {\n    /** @type {Node} */\n    this._node = node;\n\n    /** @type {boolean} */\n    this._overrodeFocusMethod = false;\n\n    /**\n     * @type {Set<InertRoot>} The set of descendant inert roots.\n     *    If and only if this set becomes empty, this node is no longer inert.\n     */\n    this._inertRoots = new Set([inertRoot]);\n\n    /** @type {boolean} */\n    this._destroyed = false;\n\n    // Save any prior tabindex info and make this node untabbable\n    this.ensureUntabbable();\n  }\n\n  /**\n   * Call this whenever this object is about to become obsolete.\n   * This makes the managed node focusable again and deletes all of the previously stored state.\n   */\n  destructor() {\n    this._throwIfDestroyed();\n\n    if (this._node) {\n      if (this.hasSavedTabIndex)\n        this._node.setAttribute('tabindex', this.savedTabIndex);\n      else\n        this._node.removeAttribute('tabindex');\n\n      // Use `delete` to restore native focus method.\n      if (this._overrodeFocusMethod)\n        delete this._node.focus;\n    }\n    this._node = null;\n    this._inertRoots = null;\n\n    this._destroyed = true;\n  }\n\n  /**\n   * @type {boolean} Whether this object is obsolete because the managed node is no longer inert.\n   * If the object has been destroyed, any attempt to access it will cause an exception.\n   */\n  get destroyed() {\n    return this._destroyed;\n  }\n\n  _throwIfDestroyed() {\n    if (this.destroyed)\n      throw new Error(\"Trying to access destroyed InertNode\");\n  }\n\n  /** @return {boolean} */\n  get hasSavedTabIndex() {\n    return '_savedTabIndex' in this;\n  }\n\n  /** @return {Node} */\n  get node() {\n    this._throwIfDestroyed();\n    return this._node;\n  }\n\n  /** @param {number} tabIndex */\n  set savedTabIndex(tabIndex) {\n    this._throwIfDestroyed();\n    this._savedTabIndex = tabIndex;\n  }\n\n  /** @return {number} */\n  get savedTabIndex() {\n    this._throwIfDestroyed();\n    return this._savedTabIndex;\n  }\n\n  /** Save the existing tabindex value and make the node untabbable and unfocusable */\n  ensureUntabbable() {\n    const node = this.node;\n    if (node.matches(_focusableElementsString)) {\n      if (node.tabIndex === -1 && this.hasSavedTabIndex)\n        return;\n\n      if (node.hasAttribute('tabindex'))\n        this._savedTabIndex = node.tabIndex;\n      node.setAttribute('tabindex', '-1');\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        node.focus = function() {};\n        this._overrodeFocusMethod = true;\n      }\n    } else if (node.hasAttribute('tabindex')) {\n      this._savedTabIndex = node.tabIndex;\n      node.removeAttribute('tabindex');\n    }\n  }\n\n  /**\n   * Add another inert root to this inert node's set of managing inert roots.\n   * @param {InertRoot} inertRoot\n   */\n  addInertRoot(inertRoot) {\n    this._throwIfDestroyed();\n    this._inertRoots.add(inertRoot);\n  }\n\n  /**\n   * Remove the given inert root from this inert node's set of managing inert roots.\n   * If the set of managing inert roots becomes empty, this node is no longer inert,\n   * so the object should be destroyed.\n   * @param {InertRoot} inertRoot\n   */\n  removeInertRoot(inertRoot) {\n    this._throwIfDestroyed();\n    this._inertRoots.delete(inertRoot);\n    if (this._inertRoots.size === 0)\n      this.destructor();\n  }\n}\n\n/**\n * InertManager is a per-document singleton object which manages all inert roots and nodes.\n *\n * When an element becomes an inert root by having an `inert` attribute set and/or its `inert`\n * property set to `true`, the `setInert` method creates an `InertRoot` object for the element.\n * The `InertRoot` in turn registers itself as managing all of the element's focusable descendant\n * nodes via the `register()` method. The `InertManager` ensures that a single `InertNode` instance\n * is created for each such node, via the `_managedNodes` map.\n */\nclass InertManager {\n  /**\n   * @param {Document} document\n   */\n  constructor(document) {\n    if (!document)\n      throw new Error('Missing required argument; InertManager needs to wrap a document.');\n\n    /** @type {Document} */\n    this._document = document;\n\n    /**\n     * All managed nodes known to this InertManager. In a map to allow looking up by Node.\n     * @type {Map<Node, InertNode>}\n     */\n    this._managedNodes = new Map();\n\n    /**\n     * All inert roots known to this InertManager. In a map to allow looking up by Node.\n     * @type {Map<Node, InertRoot>}\n     */\n    this._inertRoots = new Map();\n\n    /**\n     * Observer for mutations on `document.body`.\n     * @type {MutationObserver}\n     */\n    this._observer = new MutationObserver(this._watchForInert.bind(this));\n\n\n    // Add inert style.\n    addInertStyle(document.head || document.body || document.documentElement);\n\n    // Wait for document to be loaded.\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', this._onDocumentLoaded.bind(this));\n    } else {\n      this._onDocumentLoaded();\n    }\n  }\n\n  /**\n   * Set whether the given element should be an inert root or not.\n   * @param {Element} root\n   * @param {boolean} inert\n   */\n  setInert(root, inert) {\n    if (inert) {\n      if (this._inertRoots.has(root))   // element is already inert\n        return;\n\n      const inertRoot = new InertRoot(root, this);\n      root.setAttribute('inert', '');\n      this._inertRoots.set(root, inertRoot);\n      // If not contained in the document, it must be in a shadowRoot.\n      // Ensure inert styles are added there.\n      if (!this._document.body.contains(root)) {\n        let parent = root.parentNode;\n        while (parent) {\n          if (parent.nodeType === 11) {\n            addInertStyle(parent);\n          }\n          parent = parent.parentNode;\n        }\n      }\n    } else {\n      if (!this._inertRoots.has(root))  // element is already non-inert\n        return;\n\n      const inertRoot = this._inertRoots.get(root);\n      inertRoot.destructor();\n      this._inertRoots.delete(root);\n      root.removeAttribute('inert');\n    }\n  }\n\n  /**\n   * Get the InertRoot object corresponding to the given inert root element, if any.\n   * @param {Element} element\n   * @return {InertRoot?}\n   */\n  getInertRoot(element) {\n    return this._inertRoots.get(element);\n  }\n\n  /**\n   * Register the given InertRoot as managing the given node.\n   * In the case where the node has a previously existing inert root, this inert root will\n   * be added to its set of inert roots.\n   * @param {Node} node\n   * @param {InertRoot} inertRoot\n   * @return {InertNode} inertNode\n   */\n  register(node, inertRoot) {\n    let inertNode = this._managedNodes.get(node);\n    if (inertNode !== undefined) {  // node was already in an inert subtree\n      inertNode.addInertRoot(inertRoot);\n      // Update saved tabindex value if necessary\n      inertNode.ensureUntabbable();\n    } else {\n      inertNode = new InertNode(node, inertRoot);\n    }\n\n    this._managedNodes.set(node, inertNode);\n\n    return inertNode;\n  }\n\n  /**\n   * De-register the given InertRoot as managing the given inert node.\n   * Removes the inert root from the InertNode's set of managing inert roots, and remove the inert\n   * node from the InertManager's set of managed nodes if it is destroyed.\n   * If the node is not currently managed, this is essentially a no-op.\n   * @param {Node} node\n   * @param {InertRoot} inertRoot\n   * @return {InertNode?} The potentially destroyed InertNode associated with this node, if any.\n   */\n  deregister(node, inertRoot) {\n    const inertNode = this._managedNodes.get(node);\n    if (!inertNode)\n      return null;\n\n    inertNode.removeInertRoot(inertRoot);\n    if (inertNode.destroyed)\n      this._managedNodes.delete(node);\n\n    return inertNode;\n  }\n\n  /**\n   * Callback used when document has finished loading.\n   */\n  _onDocumentLoaded() {\n    // Find all inert roots in document and make them actually inert.\n    const inertElements = Array.from(this._document.querySelectorAll('[inert]'));\n    for (let inertElement of inertElements)\n      this.setInert(inertElement, true);\n\n    // Comment this out to use programmatic API only.\n    this._observer.observe(this._document.body, { attributes: true, subtree: true, childList: true });\n  }\n\n  /**\n   * Callback used when mutation observer detects attribute changes.\n   * @param {MutationRecord} records\n   * @param {MutationObserver} self\n   */\n  _watchForInert(records, self) {\n    for (let record of records) {\n      switch (record.type) {\n      case 'childList':\n        for (let node of Array.from(record.addedNodes)) {\n          if (node.nodeType !== Node.ELEMENT_NODE)\n            continue;\n          const inertElements = Array.from(node.querySelectorAll('[inert]'));\n          if (node.matches('[inert]'))\n            inertElements.unshift(node);\n          for (let inertElement of inertElements)\n            this.setInert(inertElement, true);\n        }\n        break;\n      case 'attributes':\n        if (record.attributeName !== 'inert')\n          continue;\n        const target = record.target;\n        const inert = target.hasAttribute('inert');\n        this.setInert(target, inert);\n        break;\n      }\n    }\n  }\n}\n\n /**\n  * Recursively walk the composed tree from |node|.\n  * @param {Node} node\n  * @param {(function (Element))=} callback Callback to be called for each element traversed,\n  *     before descending into child nodes.\n  * @param {ShadowRoot=} shadowRootAncestor The nearest ShadowRoot ancestor, if any.\n  */\nfunction composedTreeWalk(node, callback, shadowRootAncestor) {\n  if (node.nodeType == Node.ELEMENT_NODE) {\n    const element = /** @type {Element} */ (node);\n    if (callback)\n      callback(element)\n\n    // Descend into node:\n    // If it has a ShadowRoot, ignore all child elements - these will be picked\n    // up by the <content> or <shadow> elements. Descend straight into the\n    // ShadowRoot.\n    const shadowRoot = element.shadowRoot || element.webkitShadowRoot;\n    if (shadowRoot) {\n      composedTreeWalk(shadowRoot, callback, shadowRoot);\n      return;\n    }\n\n    // If it is a <content> element, descend into distributed elements - these\n    // are elements from outside the shadow root which are rendered inside the\n    // shadow DOM.\n    if (element.localName == 'content') {\n      const content = /** @type {HTMLContentElement} */ (element);\n      // Verifies if ShadowDom v0 is supported.\n      const distributedNodes = content.getDistributedNodes ?\n        content.getDistributedNodes() : [];\n      for (let i = 0; i < distributedNodes.length; i++) {\n        composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n      }\n      return;\n    }\n\n    // If it is a <slot> element, descend into assigned nodes - these\n    // are elements from outside the shadow root which are rendered inside the\n    // shadow DOM.\n    if (element.localName == 'slot') {\n      const slot = /** @type {HTMLSlotElement} */ (element);\n      // Verify if ShadowDom v1 is supported.\n      const distributedNodes = slot.assignedNodes ?\n        slot.assignedNodes({ flatten: true }) : [];\n      for (let i = 0; i < distributedNodes.length; i++) {\n        composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n      }\n      return;\n    }\n  }\n\n  // If it is neither the parent of a ShadowRoot, a <content> element, a <slot>\n  // element, nor a <shadow> element recurse normally.\n  let child = node.firstChild;\n  while (child != null) {\n    composedTreeWalk(child, callback, shadowRootAncestor);\n    child = child.nextSibling;\n  }\n}\n\n/**\n * Adds a style element to the node containing the inert specific styles\n * @param {Node} node\n */\nfunction addInertStyle(node) {\n  if (node.querySelector('style#inert-style')) {\n    return;\n  }\n  const style = document.createElement('style');\n  style.setAttribute('id', 'inert-style');\n  style.textContent = \"\\n\"+\n                      \"[inert] {\\n\" +\n                      \"  pointer-events: none;\\n\" +\n                      \"  cursor: default;\\n\" +\n                      \"}\\n\" +\n                      \"\\n\" +\n                      \"[inert], [inert] * {\\n\" +\n                      \"  user-select: none;\\n\" +\n                      \"  -webkit-user-select: none;\\n\" +\n                      \"  -moz-user-select: none;\\n\" +\n                      \"  -ms-user-select: none;\\n\" +\n                      \"}\\n\";\n  node.appendChild(style);\n}\n\nconst inertManager = new InertManager(document);\n\nObject.defineProperty(Element.prototype, 'inert', {\n                        enumerable: true,\n                        get: function() { return this.hasAttribute('inert'); },\n                        set: function(inert) { inertManager.setInert(this, inert) }\n                      });\n\n})(document);\n","(function() {\n  'use strict';\n  var db;\n\n  function getDB() {\n    if (!db) {\n      db = new Promise(function(resolve, reject) {\n        var openreq = indexedDB.open('keyval-store', 1);\n        \n        openreq.onerror = function() {\n          reject(openreq.error);\n        };\n        \n        openreq.onupgradeneeded = function() {\n          // First time setup: create an empty object store\n          openreq.result.createObjectStore('keyval');\n        };\n\n        openreq.onsuccess = function() {\n          resolve(openreq.result);\n        };\n      });\n    }\n    return db;\n  }\n\n  function withStore(type, callback) {\n    return getDB().then(function(db) {\n      return new Promise(function(resolve, reject) {\n        var transaction = db.transaction('keyval', type);\n        transaction.oncomplete = function() {\n          resolve();\n        };\n        transaction.onerror = function() {\n          reject(transaction.error);\n        };\n        callback(transaction.objectStore('keyval'));\n      });\n    });\n  }\n\n  var idbKeyval = {\n    get: function(key) {\n      var req;\n      return withStore('readonly', function(store) {\n        req = store.get(key);\n      }).then(function() {\n        return req.result;\n      });\n    },\n    set: function(key, value) {\n      return withStore('readwrite', function(store) {\n        store.put(value, key);\n      });\n    },\n    delete: function(key) {\n      return withStore('readwrite', function(store) {\n        store.delete(key);\n      });\n    },\n    clear: function() {\n      return withStore('readwrite', function(store) {\n        store.clear();\n      });\n    },\n    keys: function() {\n      var keys = [];\n      return withStore('readonly', function(store) {\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // And openKeyCursor isn't supported by Safari.\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function() {\n          if (!this.result) return;\n          keys.push(this.result.key);\n          this.result.continue();\n        };  \n      }).then(function() {\n        return keys;\n      });\n    }\n  };\n\n  if (typeof module != 'undefined' && module.exports) {\n    module.exports = idbKeyval;\n  } else {\n    self.idbKeyval = idbKeyval;\n  }\n}());\n"],"sourceRoot":"/source/"}